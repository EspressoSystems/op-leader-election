// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const RoundRobinLeaderElectionStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"_initialized\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_uint8\"},{\"astId\":1001,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"_initializing\",\"offset\":1,\"slot\":\"0\",\"type\":\"t_bool\"},{\"astId\":1002,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"__gap\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_array(t_uint256)50_storage\"},{\"astId\":1003,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"_owner\",\"offset\":0,\"slot\":\"51\",\"type\":\"t_address\"},{\"astId\":1004,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"__gap\",\"offset\":0,\"slot\":\"52\",\"type\":\"t_array(t_uint256)49_storage\"},{\"astId\":1005,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"creation_block_number\",\"offset\":0,\"slot\":\"101\",\"type\":\"t_uint256\"},{\"astId\":1006,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"max_number_participants\",\"offset\":0,\"slot\":\"102\",\"type\":\"t_uint256\"},{\"astId\":1007,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"index_last_inserted_participant\",\"offset\":0,\"slot\":\"103\",\"type\":\"t_uint32\"},{\"astId\":1008,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"participants\",\"offset\":0,\"slot\":\"104\",\"type\":\"t_mapping(t_uint256,t_address)\"},{\"astId\":1009,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"is_participant\",\"offset\":0,\"slot\":\"105\",\"type\":\"t_mapping(t_address,t_bool)\"}],\"types\":{\"t_address\":{\"encoding\":\"inplace\",\"label\":\"address\",\"numberOfBytes\":\"20\"},\"t_array(t_uint256)49_storage\":{\"encoding\":\"inplace\",\"label\":\"uint256[49]\",\"numberOfBytes\":\"1568\",\"base\":\"t_uint256\"},\"t_array(t_uint256)50_storage\":{\"encoding\":\"inplace\",\"label\":\"uint256[50]\",\"numberOfBytes\":\"1600\",\"base\":\"t_uint256\"},\"t_bool\":{\"encoding\":\"inplace\",\"label\":\"bool\",\"numberOfBytes\":\"1\"},\"t_mapping(t_address,t_bool)\":{\"encoding\":\"mapping\",\"label\":\"mapping(address =\u003e bool)\",\"numberOfBytes\":\"32\",\"key\":\"t_address\",\"value\":\"t_bool\"},\"t_mapping(t_uint256,t_address)\":{\"encoding\":\"mapping\",\"label\":\"mapping(uint256 =\u003e address)\",\"numberOfBytes\":\"32\",\"key\":\"t_uint256\",\"value\":\"t_address\"},\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"},\"t_uint32\":{\"encoding\":\"inplace\",\"label\":\"uint32\",\"numberOfBytes\":\"4\"},\"t_uint8\":{\"encoding\":\"inplace\",\"label\":\"uint8\",\"numberOfBytes\":\"1\"}}}"

var RoundRobinLeaderElectionStorageLayout = new(solc.StorageLayout)

var RoundRobinLeaderElectionDeployedBin = "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c8063a7c870671161008c578063cd6dc68711610066578063cd6dc68714610201578063d52f2d7614610214578063dfafe10f14610235578063f2fde38b1461024857600080fd5b8063a7c87067146101a1578063a912546e146101d4578063b444ef9d146101e757600080fd5b806354fd4d50116100bd57806354fd4d5014610164578063715018a6146101795780638da5cb5b1461018357600080fd5b80632b9a3fed146100e457806335c1d3491461010057806352f705481461015b575b600080fd5b6100ed60655481565b6040519081526020015b60405180910390f35b61013661010e366004610c2d565b60686020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f7565b6100ed60665481565b61016c61025b565b6040516100f79190610c76565b6101816102fe565b005b60335473ffffffffffffffffffffffffffffffffffffffff16610136565b6101c46101af366004610cf0565b60696020526000908152604090205460ff1681565b60405190151581526020016100f7565b6101c46101e2366004610d12565b610312565b6101ef600a81565b60405160ff90911681526020016100f7565b61018161020f366004610d12565b610388565b610227610222366004610d12565b6104e9565b6040516100f7929190610d3c565b610181610243366004610cf0565b6106a4565b610181610256366004610cf0565b610807565b60606102867f00000000000000000000000000000000000000000000000000000000000000006108be565b6102af7f00000000000000000000000000000000000000000000000000000000000000006108be565b6102d87f00000000000000000000000000000000000000000000000000000000000000006108be565b6040516020016102ea93929190610dc3565b604051602081830303815290604052905090565b6103066109fb565b6103106000610a7c565b565b600060655482101561032657506000610382565b60675460655463ffffffff9091169060009082906103449086610e68565b61034e9190610eae565b60009081526068602052604090205473ffffffffffffffffffffffffffffffffffffffff8681169116149250610382915050565b92915050565b600054600290610100900460ff161580156103aa575060005460ff8083169116105b61043b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660ff831617610100179055610474610af3565b61047d83610807565b606682905543606555600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6040517fa7c8706700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152600090606090309063a7c8706790602401602060405180830381865afa158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d9190610ec2565b61058d575060029050606061069d565b60408051600a8082526101608201909252600091602082016101408036833701905050905060005b600a811015610695573063a912546e876105cf8489610f13565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401602060405180830381865afa15801561063d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106619190610ec2565b82828151811061067357610673610f2b565b911515602092830291909101909101528061068d81610f5a565b9150506105b5565b506000925090505b9250929050565b6106ac6109fb565b60665460675463ffffffff1610610745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f526f756e64526f62696e4c6561646572456c656374696f6e3a206c697374206f60448201527f66207061727469636970616e74732069732066756c6c2e0000000000000000006064820152608401610432565b6067805463ffffffff908116600090815260686020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881690811790915583526069909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055825490911691906107e583610f92565b91906101000a81548163ffffffff021916908363ffffffff1602179055505050565b61080f6109fb565b73ffffffffffffffffffffffffffffffffffffffff81166108b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610432565b6108bb81610a7c565b50565b60608160000361090157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561092b578061091581610f5a565b91506109249050600a83610fb5565b9150610905565b60008167ffffffffffffffff81111561094657610946610ee4565b6040519080825280601f01601f191660200182016040528015610970576020820181803683370190505b5090505b84156109f357610985600183610e68565b9150610992600a86610eae565b61099d906030610f13565b60f81b8183815181106109b2576109b2610f2b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506109ec600a86610fb5565b9450610974565b949350505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610432565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610b8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610432565b610310600054610100900460ff16610c24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610432565b61031033610a7c565b600060208284031215610c3f57600080fd5b5035919050565b60005b83811015610c61578181015183820152602001610c49565b83811115610c70576000848401525b50505050565b6020815260008251806020840152610c95816040850160208701610c46565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ceb57600080fd5b919050565b600060208284031215610d0257600080fd5b610d0b82610cc7565b9392505050565b60008060408385031215610d2557600080fd5b610d2e83610cc7565b946020939093013593505050565b60006040820160038510610d79577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8483526020604081850152818551808452606086019150828701935060005b81811015610db6578451151583529383019391830191600101610d98565b5090979650505050505050565b60008451610dd5818460208901610c46565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610e11816001850160208a01610c46565b60019201918201528351610e2c816002840160208801610c46565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610e7a57610e7a610e39565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610ebd57610ebd610e7f565b500690565b600060208284031215610ed457600080fd5b81518015158114610d0b57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008219821115610f2657610f26610e39565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f8b57610f8b610e39565b5060010190565b600063ffffffff808316818103610fab57610fab610e39565b6001019392505050565b600082610fc457610fc4610e7f565b50049056fea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(RoundRobinLeaderElectionStorageLayoutJSON), RoundRobinLeaderElectionStorageLayout); err != nil {
		panic(err)
	}

	layouts["RoundRobinLeaderElection"] = RoundRobinLeaderElectionStorageLayout
	deployedBytecodes["RoundRobinLeaderElection"] = RoundRobinLeaderElectionDeployedBin
}
