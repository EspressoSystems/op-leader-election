// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const RoundRobinLeaderElectionStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"max_number_participants\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_uint256\"},{\"astId\":1001,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"index_last_inserted_participant\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_uint32\"},{\"astId\":1002,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"participants\",\"offset\":0,\"slot\":\"2\",\"type\":\"t_mapping(t_uint256,t_address)\"},{\"astId\":1003,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"is_participant\",\"offset\":0,\"slot\":\"3\",\"type\":\"t_mapping(t_address,t_bool)\"},{\"astId\":1004,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"creation_block_number\",\"offset\":0,\"slot\":\"4\",\"type\":\"t_uint256\"}],\"types\":{\"t_address\":{\"encoding\":\"inplace\",\"label\":\"address\",\"numberOfBytes\":\"20\"},\"t_bool\":{\"encoding\":\"inplace\",\"label\":\"bool\",\"numberOfBytes\":\"1\"},\"t_mapping(t_address,t_bool)\":{\"encoding\":\"mapping\",\"label\":\"mapping(address =\u003e bool)\",\"numberOfBytes\":\"32\",\"key\":\"t_address\",\"value\":\"t_bool\"},\"t_mapping(t_uint256,t_address)\":{\"encoding\":\"mapping\",\"label\":\"mapping(uint256 =\u003e address)\",\"numberOfBytes\":\"32\",\"key\":\"t_uint256\",\"value\":\"t_address\"},\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"},\"t_uint32\":{\"encoding\":\"inplace\",\"label\":\"uint32\",\"numberOfBytes\":\"4\"}}}"

var RoundRobinLeaderElectionStorageLayout = new(solc.StorageLayout)

var RoundRobinLeaderElectionDeployedBin = "0x608060405234801561001057600080fd5b50600436106100725760003560e01c8063a912546e11610050578063a912546e14610121578063d52f2d7614610134578063dfafe10f1461015557600080fd5b80632b9a3fed1461007757806335c1d34914610093578063a7c87067146100ee575b600080fd5b61008060045481565b6040519081526020015b60405180910390f35b6100c96100a13660046105e5565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008a565b6101116100fc366004610627565b60036020526000908152604090205460ff1681565b604051901515815260200161008a565b61011161012f366004610649565b61016a565b610147610142366004610649565b6101e0565b60405161008a929190610673565b610168610163366004610627565b61039b565b005b600060045482101561017e575060006101da565b60015460045463ffffffff90911690600090829061019c9086610729565b6101a6919061073c565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff86811691161492506101da915050565b92915050565b6040517fa7c8706700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152600090606090309063a7c8706790602401602060405180830381865afa158015610250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102749190610777565b6102845750600290506060610394565b60408051600a8082526101608201909252600091602082016101408036833701905050905060005b600a81101561038c573063a912546e876102c68489610799565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401602060405180830381865afa158015610334573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103589190610777565b82828151811061036a5761036a6107ac565b9115156020928302919091019091015280610384816107db565b9150506102ac565b506000925090505b9250929050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461048b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152605360248201527f526f756e64526f62696e4c6561646572456c656374696f6e3a206f6e6c79207460448201527f68652063726561746f72206f66207468697320636f6e74726163742063616e2060648201527f63616c6c20746869732066756e6374696f6e2e00000000000000000000000000608482015260a4015b60405180910390fd5b60005460015463ffffffff1610610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f526f756e64526f62696e4c6561646572456c656374696f6e3a206c697374206f60448201527f66207061727469636970616e74732069732066756c6c2e0000000000000000006064820152608401610482565b6001805463ffffffff908116600090815260026020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881690811790915583526003909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001684179055825490911691906105c383610813565b91906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000602082840312156105f757600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461062257600080fd5b919050565b60006020828403121561063957600080fd5b610642826105fe565b9392505050565b6000806040838503121561065c57600080fd5b610665836105fe565b946020939093013593505050565b600060408201600385106106b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8483526020604081850152818551808452606086019150828701935060005b818110156106ed5784511515835293830193918301916001016106cf565b5090979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156101da576101da6106fa565b600082610772577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b60006020828403121561078957600080fd5b8151801515811461064257600080fd5b808201808211156101da576101da6106fa565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361080c5761080c6106fa565b5060010190565b600063ffffffff80831681810361082c5761082c6106fa565b600101939250505056fea164736f6c6343000813000a"

func init() {
	if err := json.Unmarshal([]byte(RoundRobinLeaderElectionStorageLayoutJSON), RoundRobinLeaderElectionStorageLayout); err != nil {
		panic(err)
	}

	layouts["RoundRobinLeaderElection"] = RoundRobinLeaderElectionStorageLayout
	deployedBytecodes["RoundRobinLeaderElection"] = RoundRobinLeaderElectionDeployedBin
}
