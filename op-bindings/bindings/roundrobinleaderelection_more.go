// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const RoundRobinLeaderElectionStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"_initialized\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_uint8\"},{\"astId\":1001,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"_initializing\",\"offset\":1,\"slot\":\"0\",\"type\":\"t_bool\"},{\"astId\":1002,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"__gap\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_array(t_uint256)50_storage\"},{\"astId\":1003,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"_owner\",\"offset\":0,\"slot\":\"51\",\"type\":\"t_address\"},{\"astId\":1004,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"__gap\",\"offset\":0,\"slot\":\"52\",\"type\":\"t_array(t_uint256)49_storage\"},{\"astId\":1005,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"creation_block_number\",\"offset\":0,\"slot\":\"101\",\"type\":\"t_uint256\"},{\"astId\":1006,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"max_number_participants\",\"offset\":0,\"slot\":\"102\",\"type\":\"t_uint256\"},{\"astId\":1007,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"index_last_inserted_participant\",\"offset\":0,\"slot\":\"103\",\"type\":\"t_uint32\"},{\"astId\":1008,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"participants\",\"offset\":0,\"slot\":\"104\",\"type\":\"t_mapping(t_uint256,t_address)\"},{\"astId\":1009,\"contract\":\"src/L1/RoundRobinLeaderElection.sol:RoundRobinLeaderElection\",\"label\":\"is_participant\",\"offset\":0,\"slot\":\"105\",\"type\":\"t_mapping(t_address,t_bool)\"}],\"types\":{\"t_address\":{\"encoding\":\"inplace\",\"label\":\"address\",\"numberOfBytes\":\"20\"},\"t_array(t_uint256)49_storage\":{\"encoding\":\"inplace\",\"label\":\"uint256[49]\",\"numberOfBytes\":\"1568\",\"base\":\"t_uint256\"},\"t_array(t_uint256)50_storage\":{\"encoding\":\"inplace\",\"label\":\"uint256[50]\",\"numberOfBytes\":\"1600\",\"base\":\"t_uint256\"},\"t_bool\":{\"encoding\":\"inplace\",\"label\":\"bool\",\"numberOfBytes\":\"1\"},\"t_mapping(t_address,t_bool)\":{\"encoding\":\"mapping\",\"label\":\"mapping(address =\u003e bool)\",\"numberOfBytes\":\"32\",\"key\":\"t_address\",\"value\":\"t_bool\"},\"t_mapping(t_uint256,t_address)\":{\"encoding\":\"mapping\",\"label\":\"mapping(uint256 =\u003e address)\",\"numberOfBytes\":\"32\",\"key\":\"t_uint256\",\"value\":\"t_address\"},\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"},\"t_uint32\":{\"encoding\":\"inplace\",\"label\":\"uint32\",\"numberOfBytes\":\"4\"},\"t_uint8\":{\"encoding\":\"inplace\",\"label\":\"uint8\",\"numberOfBytes\":\"1\"}}}"

var RoundRobinLeaderElectionStorageLayout = new(solc.StorageLayout)

var RoundRobinLeaderElectionDeployedBin = "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a912546e1161008c578063d52f2d7611610066578063d52f2d761461021f578063dfafe10f14610240578063ef7fa71b14610253578063f2fde38b1461026657600080fd5b8063a912546e146101df578063b444ef9d146101f2578063cd6dc6871461020c57600080fd5b806354fd4d50116100c857806354fd4d501461016f578063715018a6146101845780638da5cb5b1461018e578063a7c87067146101ac57600080fd5b80632b9a3fed146100ef57806335c1d3491461010b57806352f7054814610166575b600080fd5b6100f860655481565b6040519081526020015b60405180910390f35b610141610119366004610d86565b60686020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610102565b6100f860665481565b610177610279565b6040516101029190610dcf565b61018c61031c565b005b60335473ffffffffffffffffffffffffffffffffffffffff16610141565b6101cf6101ba366004610e49565b60696020526000908152604090205460ff1681565b6040519015158152602001610102565b6101cf6101ed366004610e6b565b610330565b6101fa600a81565b60405160ff9091168152602001610102565b61018c61021a366004610e6b565b6103a6565b61023261022d366004610e6b565b610507565b604051610102929190610e95565b61018c61024e366004610e49565b6106c2565b61018c610261366004610f1c565b610825565b61018c610274366004610e49565b610960565b60606102a47f0000000000000000000000000000000000000000000000000000000000000000610a17565b6102cd7f0000000000000000000000000000000000000000000000000000000000000000610a17565b6102f67f0000000000000000000000000000000000000000000000000000000000000000610a17565b60405160200161030893929190610f8e565b604051602081830303815290604052905090565b610324610b54565b61032e6000610bd5565b565b6000606554821015610344575060006103a0565b60675460655463ffffffff9091169060009082906103629086611033565b61036c9190611079565b60009081526068602052604090205473ffffffffffffffffffffffffffffffffffffffff86811691161492506103a0915050565b92915050565b600054600290610100900460ff161580156103c8575060005460ff8083169116105b610459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660ff831617610100179055610492610c4c565b61049b83610960565b606682905543606555600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6040517fa7c8706700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152600090606090309063a7c8706790602401602060405180830381865afa158015610577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059b919061108d565b6105ab57506002905060606106bb565b60408051600a8082526101608201909252600091602082016101408036833701905050905060005b600a8110156106b3573063a912546e876105ed84896110de565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401602060405180830381865afa15801561065b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067f919061108d565b828281518110610691576106916110f6565b91151560209283029190910190910152806106ab81611125565b9150506105d3565b506000925090505b9250929050565b6106ca610b54565b60665460675463ffffffff1610610763576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f526f756e64526f62696e4c6561646572456c656374696f6e3a206c697374206f60448201527f66207061727469636970616e74732069732066756c6c2e0000000000000000006064820152608401610450565b6067805463ffffffff908116600090815260686020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff881690811790915583526069909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055825490911691906108038361115d565b91906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6040517fa912546e000000000000000000000000000000000000000000000000000000008152336004820152436024820152600090309063a912546e90604401602060405180830381865afa158015610882573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a6919061108d565b90508061095b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604760248201527f526f756e64526f62696e4c6561646572456c656374696f6e3a207375626d697460448201527f2066756e6374696f6e206d7573742062652063616c6c6564206279207468652060648201527f6c65616465722e00000000000000000000000000000000000000000000000000608482015260a401610450565b505050565b610968610b54565b73ffffffffffffffffffffffffffffffffffffffff8116610a0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610450565b610a1481610bd5565b50565b606081600003610a5a57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610a845780610a6e81611125565b9150610a7d9050600a83611180565b9150610a5e565b60008167ffffffffffffffff811115610a9f57610a9f6110af565b6040519080825280601f01601f191660200182016040528015610ac9576020820181803683370190505b5090505b8415610b4c57610ade600183611033565b9150610aeb600a86611079565b610af69060306110de565b60f81b818381518110610b0b57610b0b6110f6565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610b45600a86611180565b9450610acd565b949350505050565b60335473ffffffffffffffffffffffffffffffffffffffff16331461032e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610450565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ce3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610450565b61032e600054610100900460ff16610d7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610450565b61032e33610bd5565b600060208284031215610d9857600080fd5b5035919050565b60005b83811015610dba578181015183820152602001610da2565b83811115610dc9576000848401525b50505050565b6020815260008251806020840152610dee816040850160208701610d9f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e4457600080fd5b919050565b600060208284031215610e5b57600080fd5b610e6482610e20565b9392505050565b60008060408385031215610e7e57600080fd5b610e8783610e20565b946020939093013593505050565b60006040820160038510610ed2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8483526020604081850152818551808452606086019150828701935060005b81811015610f0f578451151583529383019391830191600101610ef1565b5090979650505050505050565b60008060208385031215610f2f57600080fd5b823567ffffffffffffffff80821115610f4757600080fd5b818501915085601f830112610f5b57600080fd5b813581811115610f6a57600080fd5b866020828501011115610f7c57600080fd5b60209290920196919550909350505050565b60008451610fa0818460208901610d9f565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610fdc816001850160208a01610d9f565b60019201918201528351610ff7816002840160208801610d9f565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561104557611045611004565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826110885761108861104a565b500690565b60006020828403121561109f57600080fd5b81518015158114610e6457600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082198211156110f1576110f1611004565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361115657611156611004565b5060010190565b600063ffffffff80831681810361117657611176611004565b6001019392505050565b60008261118f5761118f61104a565b50049056fea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(RoundRobinLeaderElectionStorageLayoutJSON), RoundRobinLeaderElectionStorageLayout); err != nil {
		panic(err)
	}

	layouts["RoundRobinLeaderElection"] = RoundRobinLeaderElectionStorageLayout
	deployedBytecodes["RoundRobinLeaderElection"] = RoundRobinLeaderElectionDeployedBin
}
